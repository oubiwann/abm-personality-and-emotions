;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;   Agent Support Procedures   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to-report member-personality? [agent personality-ids]
  let agent-personality [personality-id] of agent
  if member? agent-personality personality-ids [ report true ]
  report false
end

to-report agent-intersection [agents personality-ids]
  if agents = nobody [ report agents ]
  if personality-ids = [] [ report nobody ]
  report turtle-set (map [x -> agents with [personality-id = x]] personality-ids)
end

to-report filter-attracted-agents [agent]
  report agent-intersection [personality-neighbors] of agent
                            (attracted-lookup [personality-id] of agent)
end

to-report filter-repulsed-agents [agent]
  report agent-intersection [personality-neighbors] of agent
                            (repulsed-lookup [personality-id] of agent)
end

to-report agent-distances [agent agents]
  let agent-ids [who] of agents
  report (map [x -> ([distance turtle x] of agent)] agent-ids)
end

to-report attracted-agent-distances [agent]
  report agent-distances agent (filter-attracted-agents agent)
end

to-report repulsed-agent-distances [agent]
  report agent-distances agent (filter-repulsed-agents agent)
end

to-report agent-coords [agent]
  report [(list xcor ycor)] of agent
end

to-report agents-coords [agents]
  report [(list xcor ycor)] of agents
end

to-report attracted-agent-coords [agent]
  report agents-coords (filter-attracted-agents agent)
end

to-report repulsed-agent-coords [agent]
  report agents-coords (filter-repulsed-agents agent)
end

to-report agent-augmented-coords [agent agents]
  let agent-ids [who] of agents
  report (map [x -> (list [xcor] of turtle x
                          [ycor] of turtle x
                          (charge [distance turtle x] of agent)) ]
              agent-ids)
end

to-report agent-augmented-coords-with-k [agent agents]
  let agent-ids [who] of agents
  report (map [x -> (list [xcor] of turtle x
                          [ycor] of turtle x
                          (charge-with-k [distance turtle x] of agent)) ]
              agent-ids)
end

to-report attracted-center-of-charge [agent]
  let agents (filter-attracted-agents agent)
  print agents
  if agents = nobody or not any? agents [
    report agent-coords agent
  ]
  report center-of-charge (agent-augmented-coords
                           agent
                           agents)
end

to-report repulsed-center-of-charge [agent]
  let agents (filter-repulsed-agents agent)
  if agents = nobody or not any? agents [
    report agent-coords agent
  ]
  report center-of-charge (agent-augmented-coords
                           agent
                           agents)
end

to-report attracted-center-of-charge-with-k [agent]
  let agents (filter-attracted-agents agent)
  if agents = nobody or not any? agents [
    report agent-coords agent
  ]
  report center-of-charge-with-k (agent-augmented-coords-with-k
                                  agent
                                  agents)
end

to-report repulsed-center-of-charge-with-k [agent]
  let agents (filter-repulsed-agents agent)
  if agents = nobody or not any? agents [
    report agent-coords agent
  ]
  report center-of-charge-with-k (agent-augmented-coords-with-k
                                  agent
                                  agents)
end
